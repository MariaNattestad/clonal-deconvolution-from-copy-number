output directory: user_data/Rbeyhx6Wltu4BSMaF8fu
user_data/Rbeyhx6Wltu4BSMaF8fu/info.txt exists--check
samples: 5
bins: 0
Running algorithm on 2 up to 5 clones
====================================================
output directory: user_data/Rbeyhx6Wltu4BSMaF8fu
___________________________________________________
Running algorithm for tumor with 2 clones
Run directory: user_data/Rbeyhx6Wltu4BSMaF8fu/2_clones/
___________________________________________________
user_data/Rbeyhx6Wltu4BSMaF8fu/D.txt
====================================================
python -c import deconvolve; deconvolve.run_deconvolve_from_file('user_data/Rbeyhx6Wltu4BSMaF8fu/D.txt','user_data/Rbeyhx6Wltu4BSMaF8fu/2_clones/',numclones='2',testing='False')
True
(5, 10)
running 100 random initializations
number of samples: 5
hypothetical number of clones: 2
number of bins in genome: 10
progress: 10%
progress: 20%
progress: 30%
progress: 40%
progress: 50%
progress: 60%
progress: 70%
progress: 80%
progress: 90%
progress: 100%
showing all solutions
still need to check intelligently for duplicate solutions using calc_S_similarity
True
====================================================
output directory: user_data/Rbeyhx6Wltu4BSMaF8fu
___________________________________________________
Running algorithm for tumor with 3 clones
Run directory: user_data/Rbeyhx6Wltu4BSMaF8fu/3_clones/
___________________________________________________
user_data/Rbeyhx6Wltu4BSMaF8fu/D.txt
====================================================
python -c import deconvolve; deconvolve.run_deconvolve_from_file('user_data/Rbeyhx6Wltu4BSMaF8fu/D.txt','user_data/Rbeyhx6Wltu4BSMaF8fu/3_clones/',numclones='3',testing='False')
True
(5, 10)
running 100 random initializations
number of samples: 5
hypothetical number of clones: 3
number of bins in genome: 10
progress: 10%
progress: 20%
progress: 30%
progress: 40%
progress: 50%
progress: 60%
progress: 70%
progress: 80%
progress: 90%
progress: 100%
showing all solutions
still need to check intelligently for duplicate solutions using calc_S_similarity
True
====================================================
output directory: user_data/Rbeyhx6Wltu4BSMaF8fu
___________________________________________________
Running algorithm for tumor with 4 clones
Run directory: user_data/Rbeyhx6Wltu4BSMaF8fu/4_clones/
___________________________________________________
user_data/Rbeyhx6Wltu4BSMaF8fu/D.txt
====================================================
python -c import deconvolve; deconvolve.run_deconvolve_from_file('user_data/Rbeyhx6Wltu4BSMaF8fu/D.txt','user_data/Rbeyhx6Wltu4BSMaF8fu/4_clones/',numclones='4',testing='False')
True
(5, 10)
running 100 random initializations
number of samples: 5
hypothetical number of clones: 4
number of bins in genome: 10
progress: 10%
progress: 20%
progress: 30%
progress: 40%
progress: 50%
progress: 60%
progress: 70%
progress: 80%
progress: 90%
progress: 100%
still need to check intelligently for duplicate solutions using calc_S_similarity
True
====================================================
output directory: user_data/Rbeyhx6Wltu4BSMaF8fu
___________________________________________________
Running algorithm for tumor with 5 clones
Run directory: user_data/Rbeyhx6Wltu4BSMaF8fu/5_clones/
___________________________________________________
user_data/Rbeyhx6Wltu4BSMaF8fu/D.txt
====================================================
python -c import deconvolve; deconvolve.run_deconvolve_from_file('user_data/Rbeyhx6Wltu4BSMaF8fu/D.txt','user_data/Rbeyhx6Wltu4BSMaF8fu/5_clones/',numclones='5',testing='False')
True
(5, 10)
running 100 random initializations
number of samples: 5
hypothetical number of clones: 5
number of bins in genome: 10
progress: 10%
progress: 20%
progress: 30%
progress: 40%
progress: 50%
progress: 60%
progress: 70%
progress: 80%
progress: 90%
progress: 100%
still need to check intelligently for duplicate solutions using calc_S_similarity
True
collecting costs from all analyses
Collected costs in user_data/Rbeyhx6Wltu4BSMaF8fu/costs.txt
plotting everything
