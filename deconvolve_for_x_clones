#!/bin/bash
progname=deconvolve_for_x_clones
echo ====================================================


function usage () {
    cat <<EOF
Usage: $progname [-d] -c code  -f Dfilename -n clones
$progname -h for help
EOF
    exit 0
}

function guide () {
    cat <<EOF
Usage: $progname [-d] -c code  -f Dfilename -n clones
[-h] help displays this help menu
[-d] debug mode, runs algorithm only 100 times at each condition to debug code
-c code *required field: a code value (can mix letters and numbers) so users can revisit their data later,
        this becomes the run directory inside user_data/
        must match the code used for prepare_copycat
-f Dfilename *required field: a name for the file a user uploaded from the web app
        must match the filename used for prepare_copycat
-n clones *required field: number of clones to split the tumor into
EOF
    exit 0
}


testing=False
code=0 # becomes the run directory inside user_data
Dfilename=D.txt
numclones=2


while getopts ":dhc:f:n:" opt; do
  case $opt in
    d)
        echo "-d: debug mode initiated" >&2
        testing=True
        ;;
    c )
        code=$OPTARG
        outdir=user_data/$code
        
        if [ ! -d $outdir ]; then
            echo ERROR: ----------Directory does not exist: $outdir------------
            echo first run this command to create info.txt file: ./prepare_copycat $code $Dfilename
            echo or if you have already run it, make sure you are inserting the right code here
            usage
        fi
        echo "-c: code=$code" >&2
        echo output directory: $outdir;;
    f )
        Dfilename=$OPTARG
        echo "-f: filename of input data: $Dfilename" >&2;;
    n )
        numclones=$OPTARG
        if [ $numclones -gt 1 ]; then
          echo "-n: $numclones clones" >&2
        else
          echo "please enter a positive integer indicating the number of clones to split the tumor into after the -n option"
          usage
        fi
        ;;
    h )
        guide
        ;;
    \?) usage
        ;;
  esac
done

shift $(($OPTIND - 1))




if [ ! -d user_data/$code/ ]; then
    echo "Directory user_data/$code/ must exist, you may need to run prepare_copycat to make it"
    usage
fi


outdir=user_data/$code/$numclones\_clones/
mkdir $outdir
echo ___________________________________________________
echo Running algorithm for tumor with $numclones clones
echo Run directory:  $outdir
echo ___________________________________________________


D=user_data/$code/$Dfilename

echo $D
echo ====================================================
echo python -c "import deconvolve; deconvolve.run_deconvolve_from_file('$D','$outdir',numclones='$numclones',testing='$testing')"
python -c "import deconvolve; deconvolve.run_deconvolve_from_file('$D','$outdir',numclones='$numclones',testing='$testing')"

